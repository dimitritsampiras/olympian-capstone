### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AppError {
  createdAt: String!
  message: String!
  name: String!
}

input CreateProgramInput {
  name: String!
  publicity: Publicity!
  specificity: [Specificity!]!
  tags: [String!]!
  userId: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum Equipment {
  ball
  band
  barbell
  bench
  bodyweight
  box
  cable
  dumbbell
  foam_roller
  kettlebell
  machine
  medicine_ball
  resistance_band
  sandbag
  sled
  suspension_trainer
  trap_bar
  weighted_vest
}

type Exercise {
  authorNotes: String
  id: ID!
  reps: Int
  rpe: Int
  sets: Int
}

input LoginInput {
  password: String!
  username: String!
}

enum Movement {
  anti_extension
  anti_lateral_flexion
  anti_rotation
  carry
  elevation
  explosive
  extension
  external_rotation
  flexion
  hip_dominant
  horizontal_pull
  horizontal_push
  internal_rotation
  isolation
  knee_dominant
  rotation
  vertical_pull
  vertical_push
}

enum Muscle {
  abductors
  abs
  adductor
  back_deltoids
  biceps
  calves
  chest
  forearm
  front_deltoids
  gluteal
  hamstring
  head
  lower_back
  middle_deltoids
  neck
  obliques
  quadriceps
  trapezius
  triceps
  upper_back
}

type Mutation {
  createProgram(input: CreateProgramInput!): Program
  createWorkout(programId: String!): Workout
  login(input: LoginInput!): String
  signup(input: SignUpInput!): Boolean
}

type Profile {
  id: ID!
  programs: [Program!]!
  user: User!
}

type Program {
  complimentary: Boolean
  id: ID!
  name: String!
  profile: Profile!
  publicity: Publicity!
  specificity: [Specificity!]!
  tags: [String!]!
  trainingLevel: TrainingLevel
  workouts: [Workout!]!
}

enum Publicity {
  friends
  private
  public
}

type Query {
  emailExists(email: String!): Boolean
  me: User
  popularPrograms(skip: Int!, take: Int!): [Program!]!
  program(programId: String!): Program
  staticExercise(staticExerciseId: String!): StaticExercise
  trendingPrograms(skip: Int!, take: Int!): [Program!]!
  userPrograms: [Program!]!
  usernameExists(username: String!): Boolean
  workout(workoutId: String!): Workout
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
  username: String!
}

enum Specificity {
  athleticism
  cardio
  general
  hypertrophy
  strength
}

type StaticExercise {
  createdAt: DateTime!
  description: String
  equipment: Equipment
  exercise: [Exercise!]!
  id: ID!
  movement: Movement!
  name: String!
  primaryTargetMuscle: Muscle!
  secondaryTargetMuscle: Muscle
  tertiaryTargetMuscle: Muscle
  updatedAt: DateTime!
}

enum TrainingLevel {
  advanced
  beginner
  intermediate
}

type User {
  email: String!
  id: ID!
  name: String!
  password: String!
  profile: Profile
  username: String!
}

type UserResponse {
  error: AppError
  user: User
}

type Workout {
  duration: DateTime!
  exercises: [Exercise!]!
  id: ID!
  name: String!
  programId: String
  specificity: [Specificity!]!
  tags: [String!]!
  trainingLevel: TrainingLevel
}