### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AppError {
  createdAt: String!
  message: String!
  name: String!
}

input CreateProgramInput {
  name: String!
  publicity: Publicity!
  tags: [String!]!
  userId: String!
}

type Exercise {
  description: String!
  id: ID!
  reps: Int
  rpe: Int
  sets: Int
}

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  createProgram(input: CreateProgramInput!): Program
  login(input: LoginInput!): String
  signup(input: SignUpInput!): Boolean
}

type Profile {
  id: ID!
  programs: [Program!]!
  user: User!
}

type Program {
  complimentary: Boolean
  id: ID!
  name: String!
  profile: Profile!
  publicity: Publicity!
  specificity: [Specificity!]!
  tags: [String!]!
  trainingLevel: TrainingLevel
  workouts: [Workout!]!
}

enum Publicity {
  friends
  private
  public
}

type Query {
  emailExists(email: String!): Boolean
  me: User
  program(programId: String!): Program
  userPrograms: [Program!]!
  usernameExists(username: String!): Boolean
}

input SignUpInput {
  email: String!
  name: String!
  password: String!
  username: String!
}

enum Specificity {
  athletic
  cardio
  general
  hypertrophy
  strength
}

enum TrainingLevel {
  advanced
  beginner
  intermediate
}

type User {
  email: String!
  id: ID!
  name: String!
  password: String!
  profile: Profile
  username: String!
}

type UserResponse {
  error: AppError
  user: User
}

type Workout {
  id: ID!
  name: String!
  specificity: [Specificity!]!
  tags: [String!]!
  trainingLevel: TrainingLevel!
}